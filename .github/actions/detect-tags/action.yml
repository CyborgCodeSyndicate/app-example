name: Detect Codebase Changes

description: Emits a test tags when codebase changes are detected

inputs:
  before:
    description: Git SHA before the change
    required: true
  after:
    description: Git SHA after the change
    required: true
  service_tag_map:
    description: Tags to emit when a change is detected
    required: true

outputs:
  tags:
    description: Comma-separated tags to include
    value: ${{ steps.set-tag-output.outputs.tags }}

runs:
  using: "composite"
  steps:
    - id: set-tag-output
      shell: bash
      run: |
        BEFORE="${{ inputs.before }}"
        AFTER="${{ inputs.after }}"

        if [ -z "$BEFORE" ]; then
          echo "🔍 'before' SHA is empty. Using HEAD^ as fallback."
          BEFORE=$(git rev-parse "${AFTER}^")
          echo "✅ Fallback BEFORE=$BEFORE"
        fi

        echo "🔧 Using BEFORE=$BEFORE"
        echo "🔧 Using AFTER=$AFTER"

        CHANGED=$(git diff --name-only "$BEFORE" "$AFTER")
        echo "🔄 Changed files:"
        echo "$CHANGED"

        TAGS=""
        IFS=$'\n' read -r -d '' -a MAP < <(echo "${{ inputs.service_tag_map }}" | tr -d '\r' && printf '\0')
        for line in "${MAP[@]}"; do
          [ -z "$line" ] && continue

          path=$(echo "$line" | awk -F'->' '{print $1}' | xargs)
          tag=$(echo "$line" | awk -F'->' '{print $2}' | xargs)

          echo "🔍 Matching path: $path - tag: $tag - against changed files:"
          while read -r changed; do
            echo "   🔸 Changed: [$changed]"
            echo "   🔸 Path:    [$path]"
            if [[ "$changed" == "$path"* ]]; then
              echo "   ✅ Match found! Adding tag: $tag"
              TAGS="$TAGS,$tag"
            else
              echo "   ❌ No match!"
            fi
          done <<< "$CHANGED"
        done

        TAGS=$(echo "$TAGS" | sed 's/^,//')
        echo "✅ Detected tags: $TAGS"
        echo "tags=$TAGS" >> $GITHUB_OUTPUT